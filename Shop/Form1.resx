<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACJAJYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6pooooAKKKKACoZbiKI4d1B9CaLuVoIGkWMyFRnaCBn865TVr
        mPVop0gRluYwMPgbTjkfUc0GtKnzvXY62OaORSY2DAHBIqvdXsMbPCsi/aAnmbM8hc43Y9K5jRb8aRHF
        HdXEU0cy5Z4pAViPA6Z6HOal1LUfsGqXH2qWGRXKBFwQ/lscMOBg46jvQN07SaWqJNLvbq6sH8q6E07S
        7ULoBgYz0HIH1rpLXf5KCYgyY5xXGaMl7Fq9zaWiFLWNT5UryBshvuv+v6c1tWd02kae7atfLcSbywIx
        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
</value>
  </data>
</root>